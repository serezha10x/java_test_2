import java.util.*;

public class VulnerabilityScript {

    private final int scriptId;
    private final List<Integer> dependencies;

    public VulnerabilityScript(int scriptId, List<Integer> dependencies) {
        this.scriptId = scriptId;
        this.dependencies = dependencies;
    }

    public int getScriptId() {
        return scriptId;
    }

    public List<Integer> getDependencies() {
        return dependencies;
    }

    public void run() throws Exception {
        Stack<Integer> stack = new Stack<>();
        Queue<Integer> pool = new PriorityQueue<Integer>();
        pool.add(this.scriptId);
        stack.add(this.scriptId);

        /* Get right script ids */
        int currentScript = -1;
        while (!pool.isEmpty()) {
            currentScript = pool.poll();
            List<Integer> dependecies = ScriptsDatabase.getScriptById(currentScript).getDependencies();
            if (dependecies == null) {
                continue;
            }
            for (int dependency : dependecies) {
                stack.push(dependency);
                pool.add(dependency);
            }
        }

        /* pseudo running scripts */
        while (!stack.empty()) {
            System.out.println("Script id " + ScriptsDatabase.getScriptById(stack.pop()).getScriptId());
        }
    }
}